version: '2'
services:
  postgresql:
    image: docker.io/bitnami/postgresql:16
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - POSTGRESQL_USERNAME=bn_sonarqube
      - POSTGRESQL_DATABASE=bitnami_sonarqube
  sonarqube:
    image: docker.io/bitnami/sonarqube:10
    ports:
      - '80:9000'
    volumes:
      - 'sonarqube_data:/bitnami/sonarqube'
    depends_on:
      - postgresql
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - SONARQUBE_DATABASE_HOST=postgresql
      - SONARQUBE_DATABASE_PORT_NUMBER=5432
      - SONARQUBE_DATABASE_USER=bn_sonarqube
      - SONARQUBE_DATABASE_NAME=bitnami_sonarqube
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1235!
      ME_CONFIG_MONGODB_URL: mongodb://root:1235!@mongo:27017/
    links:
      - mongo
    networks:
      - mongo-compose-network

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1235!
    ports:
      - "27017:27017"
    networks:
      - mongo-compose-network

  redis:
    container_name: redis-stack
    environment:
      - REDIS_PASSWORD=1235
    ports:
      - "6379:6379"
      - "8001:8001"
    image: redis/redis-stack:latest

volumes:
  postgresql_data:
    driver: local
  sonarqube_data:
    driver: local

networks:
  mongo-compose-network:
    driver: bridge